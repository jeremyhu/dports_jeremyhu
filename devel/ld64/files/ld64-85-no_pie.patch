diff -Naurp ld64-85.2.1.orig/doc/man/man1/ld.1 ld64-85.2.1/doc/man/man1/ld.1
--- doc/man/man1/ld.1	2008-03-04 17:53:18.000000000 -0800
+++ doc/man/man1/ld.1	2012-04-26 10:24:00.000000000 -0700
@@ -289,10 +289,12 @@ This option is also called -dylib_curren
 .Ss Options when creating a main executable
 .Bl -tag
 .It Fl pie
-This makes a special kind of main executable that is position independent (PIE).  On Mac OS X 10.5, the OS
+This makes a special kind of main executable that is position independent (PIE).  On Mac OS X 10.5 and later, the OS
 will load a PIE at a random address each time it is executed.  You cannot create a PIE from .o files compiled 
 with -mdynamic-no-pic.  That means the codegen is less optimal, but the address randomization adds some 
 security. 
+.It Fl no_pie
+Do not make a position independent executable (PIE).  This is the default.
 .It Fl pagezero_size Ar size
 By default the linker creates an unreadable segment starting at address zero named __PAGEZERO.  Its existence
 will cause a bus error if a NULL pointer is dereferenced.  The argument
diff -Naurp ld64-85.2.1.orig/src/Options.cpp ld64-85.2.1/src/Options.cpp
--- src/Options.cpp	2012-04-26 10:23:14.000000000 -0700
+++ src/Options.cpp	2012-04-26 10:38:20.000000000 -0700
@@ -95,7 +95,8 @@ Options::Options(int argc, const char* a
 	  fVerbose(false), fKeepRelocations(false), fWarnStabs(false),
 	  fTraceDylibSearching(false), fPause(false), fStatistics(false), fPrintOptions(false),
 	  fSharedRegionEligible(false), fPrintOrderFileStatistics(false),  
-	  fReadOnlyx86Stubs(false), fPositionIndependentExecutable(false), fMaxMinimumHeaderPad(false),
+	  fReadOnlyx86Stubs(false), fPositionIndependentExecutable(false), 
+	  fDisablePositionIndependentExecutable(false), fMaxMinimumHeaderPad(false),
 	  fDeadStripDylibs(false),  fAllowTextRelocs(false), fWarnTextRelocs(false), 
 	  fUsingLazyDylibLinking(false), fEncryptable(true), fSaveTempFiles(false)
 {
@@ -2286,6 +2287,9 @@ void Options::parse(int argc, const char
 			else if ( strcmp(arg, "-pie") == 0 ) {
 				fPositionIndependentExecutable = true;
 			}
+			else if ( strcmp(arg, "-no_pie") == 0 ) {
+				fDisablePositionIndependentExecutable = true;
+			}
 			else if ( strncmp(arg, "-reexport-l", 11) == 0 ) {
 				FileInfo info = findLibrary(&arg[11], true);
 				info.options.fReExport = true;
@@ -3050,7 +3059,11 @@ void Options::checkIllegalOptionCombinat
 		}
 	}
 	
+	// -no_pie anywhere on command line disable PIE
+	if ( fDisablePositionIndependentExecutable )
+		fPositionIndependentExecutable = false;
+
 	// check -pie is only used when building a dynamic main executable for 10.5
 	if ( fPositionIndependentExecutable ) {
 		if ( fOutputKind != Options::kDynamicExecutable )
 			throw "-pie can only be used when linking a main executable";
diff -Naurp ld64-85.2.1.orig/src/Options.h ld64-85.2.1/src/Options.h
--- src/Options.h	2008-07-10 18:15:14.000000000 -0700
+++ src/Options.h	2012-04-26 10:24:46.000000000 -0700
@@ -341,6 +341,7 @@ private:
 	bool								fPrintOrderFileStatistics;
 	bool								fReadOnlyx86Stubs;
 	bool								fPositionIndependentExecutable;
+	bool								fDisablePositionIndependentExecutable;
 	bool								fMaxMinimumHeaderPad;
 	bool								fDeadStripDylibs;
 	bool								fAllowTextRelocs;
